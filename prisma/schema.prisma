generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  announcements Announcement[]
  stats         Stat[]
  notifications Notification[]
  Event         Event[]
  Media         Media[]
}

model Player {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  number    Int
  position  String
  grade     Int
  bio       String?
  photoUrl  String?
  createdAt DateTime @default(now())
  stats Stat[]
}

model Stat {
  id        String   @id @default(uuid())
  player    Player   @relation(fields: [playerId], references: [id])
  playerId  String
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  addedBy   User     @relation(fields: [addedById], references: [id])
  addedById String
  goals     Int
  assists   Int
  penalties Int
  createdAt DateTime @default(now())
}

model Game {
  id        String   @id @default(uuid())
  opponent  String
  location  String
  date      DateTime
  isHome    Boolean
  result    String? // e.g., "Win 4-2"
  createdAt DateTime @default(now())
  stats     Stat[]
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  date        DateTime
  location    String
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime @default(now())
}

model Announcement {
  id          String   @id @default(uuid())
  title       String
  content     String
  createdAt   DateTime @default(now())
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
}

model Notification {
  id        String   @id @default(uuid())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Media {
  id           String   @id @default(uuid())
  title        String
  url          String
  uploadedBy   User     @relation(fields: [uploadedById], references: [id])
  uploadedById String
  createdAt    DateTime @default(now())
}

enum Role {
  ADMIN
  COACH
  MEMBER
}
